sudo: required
services:
  - docker

os: linux
dist: xenial
language: minimal

before_install:
  - >-
    declare -g -A TOOLSET_REPOS=(
      [common_toolset]=sandbox.galaxyproject.org
      [test.galaxyproject.org]=test.galaxyproject.org
    )
  - >-
    declare -g -A REPO_USERS=(
      [sandbox.galaxyproject.org]=sandbox
      [test.galaxyproject.org]=g2test
    )
  - >-
    declare -g -A CONDA_PATHS=(
      [sandbox.galaxyproject.org]=/cvmfs/sandbox.galaxyproject.org/dependencies/conda
      [test.galaxyproject.org]=/cvmfs/test.galaxyproject.org/deps/_conda
    )
  - echo 'Detecting changes to tool files...'
  - git diff --quiet "$TRAVIS_COMMIT_RANGE" --; GIT_DIFF_EXIT_CODE=$?
  - |
    if [ "$GIT_DIFF_EXIT_CODE" -gt 1 ]; then
        git remote set-branches --add origin master
        git fetch
        TRAVIS_COMMIT_RANGE=origin/master...
    fi
  - echo "\$TRAVIS_COMMIT_RANGE is $TRAVIS_COMMIT_RANGE"
  - echo "Change detection limited to toolset directories:"; for d in "${!TOOLSET_REPOS[@]}"; do echo "${d}/"; done
  - |
    TOOLSET= ;
    while read op path; do
        if [ -n "$TOOLSET" -a "$TOOLSET" != "${path%%/*}" ]; then
            echo "ERROR: Changes to tools in multiple toolsets found, terminating: ${TOOLSET} != ${path%%/*}"
            travis_terminate 1
        elif [ -z "$TOOLSET" ]; then
            TOOLSET="${path%%/*}"
        fi
        case "${path##*.}" in
            lock)
                ;;
            *)
                continue
                ;;
        esac
        case "$op" in
            A|M)
                echo "$op $path"
                TOOL_YAMLS+=("${path}")
                ;;
        esac
    done < <(git diff --color=never --name-status "$TRAVIS_COMMIT_RANGE" -- $(for d in "${!TOOLSET_REPOS[@]}"; do echo "${d}/"; done))
  - set | grep '^TOOL'
  - |
    if [ ${#TOOL_YAMLS[@]} -eq 0 ]; then
        echo 'No tool changes, terminating'
        travis_terminate 0
    fi
  - REPO="${TOOLSET_REPOS[$TOOLSET]}"
  - |
    if [ -n "$REPO" ]; then
        echo "Setting up CVMFS for repo ${REPO}"
    else
        echo "ERROR: No repo defined for toolset $TOOLSET, set one in \$TOOLSET_REPOS"
        travis_terminate 1
    fi
  - sudo groupadd --gid 1450 cvmfs
  - sudo useradd --uid 1450 --gid 1450 cvmfs
  - sudo mkdir /lower /upper /work /cvmfs /cvmfs/${REPO}
  - curl -O https://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest_all.deb
  - sudo dpkg -i cvmfs-release-latest_all.deb
  - sudo apt-get update
  - sudo apt-get install --no-install-recommends -y cvmfs
  - sudo cp .ci/default.local /etc/cvmfs
  - sudo cp .ci/*.pub /etc/cvmfs/keys
  - sudo mount -t cvmfs "$REPO" "/lower"
  - sudo mount -t overlay overlay -o lowerdir=/lower,upperdir=/upper,workdir=/work "/cvmfs/${REPO}"

install:
  - sudo pip install ephemeris planemo
  - >-
    docker run -d -p 8080:80 --name=galaxy
    -e GALAXY_CONFIG_INSTALL_DATABASE_CONNECTION=sqlite:////cvmfs/${REPO}/config/install.sqlite
    -e GALAXY_CONFIG_TOOL_CONFIG_FILE=/cvmfs/${REPO}/config/shed_tool_conf.xml
    -e GALAXY_CONFIG_MASTER_API_KEY=deadbeef
    -e GALAXY_CONFIG_CONDA_PREFIX=${CONDA_PATHS[$REPO]}
    -e GALAXY_HANDLER_NUMPROCS=0
    -e CONDARC=/cvmfs/${REPO}/dependencies/_condarc
    -v /cvmfs/${REPO}:/cvmfs/${REPO}
    -v $(pwd)/.ci/job_conf.xml:/job_conf.xml
    -e GALAXY_CONFIG_JOB_CONFIG_FILE=/job_conf.xml
    bgruening/galaxy-stable
  - |
    galaxy-wait -v --timeout 120 || {
        echo "#### TIMED OUT WAITING FOR GALAXY ####";
        for f in /var/log/nginx/error.log /home/galaxy/logs/uwsgi.log; do
            echo "#### CONTENTS OF ${f}:";
            docker exec galaxy cat $f;
        done;
        echo "#### RESPONSE FROM http://localhost:8080:";
        curl http://localhost:8080;
        echo "#### TERMINATING BUILD";
        travis_terminate 1;
    }

script:
  - |
    for tool_yaml in "${TOOL_YAMLS[@]}"; do
        shed-tools install -v -a deadbeef -t "$tool_yaml" --test --test_json "${tool_yaml##*/}"-test.json || {
            # TODO: test here if test failures should be ignored (but we can't separate test failures from install
            # failures at the moment) and also we can't easily get the job stderr
            #[ "$TRAVIS_PULL_REQUEST" == "false" -a "$TRAVIS_BRANCH" == "master" ] || {
            true || {
                echo "#### TOOL INSTALL/TEST FAILED ####";
                echo "#### CONTENTS OF /home/galaxy/logs/uwsgi.log:";
                docker exec galaxy cat /home/galaxy/logs/uwsgi.log;
                echo "#### TERMINATING BUILD";
                travis_terminate 1;
            };
        }
    done
  - |
    for tool_yaml in "${TOOL_YAMLS[@]}"; do
        planemo test_reports --test_output_text tests.txt "${tool_yaml##*/}"-test.json && cat tests.txt
    done

after_success:
  # TODO: uncomment next line
  #- '[ "$TRAVIS_PULL_REQUEST" != "false" -o "$TRAVIS_BRANCH" != "master" ] && travis_terminate 0 || true'
  - openssl aes-256-cbc -K $encrypted_0ffba610202a_key -iv $encrypted_0ffba610202a_iv -in .ci/deploy_key.pem.enc -out .ci/deploy_key.pem -d
  - echo 'cvmfs0-psu0.galaxyproject.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGaFllzcKadhpbZ6hNXSgIfgYspqR+IB7NVxJf3FFqZr' >> $HOME/.ssh/known_hosts
  - echo 'cvmfs0-psu0.galaxyproject.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDF4SgjupC+Te9Qx67srgaEtmFV+LjoNtLTndJwQieLDzwbcYNQoezeu4H4ijmQaL9U5oXA+l3IFL6znRxupAS21uMukqOChVfpMzuda36jcw+Eghuhfk+ZSB4A4FwMtoNJvWNgp+xNBjx0gaHM0oY7XFlACr/T48bAPUtMVrrRje70I6L6lN9oJFfVq1YyyjwZjvGzl2ffO7MzMAamphqfBpv15NFHa1jlDt5czaniJi4SLKCQoa8qZJYkdvtih71v9uP9Dhjwtau0QtPdIUrIt4T0VUjqO+ne1a9YndOLU3QGctDZHdnjklC7wbZlTy7NUKECva5nxYi2d9KwjlUh' >> $HOME/.ssh/known_hosts
  - echo 'cvmfs0-psu0.galaxyproject.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNQupx1g6IkWVabJSscujjkFDDNfgyZtiSB6pwsgwnwpSI4C/oW5CZC2/zQBdecdJw9Mua5ImSp7KxdWk6OrWco=' >> $HOME/.ssh/known_hosts
  - eval "$(ssh-agent -s)"
  - chmod 600 .ci/deploy_key.pem
  - ssh-add .ci/deploy_key.pem
  - sudo find /upper -perm -u+r -not -perm -o+r -not -type l -print0 | sudo xargs -0 --no-run-if-empty chmod go+r
  - sudo find /upper -perm -u+rx -not -perm -o+rx -not -type l -print0 | sudo xargs -0 --no-run-if-empty chmod go+rx
  - REPO_USER=${REPO_USERS[$REPO]}
  - ssh ${REPO_USER}@cvmfs0-psu0.galaxyproject.org cvmfs_server transaction ${REPO}
  - |
    rsync -av /upper/ ${REPO_USER}@cvmfs0-psu0.galaxyproject.org:/cvmfs/${REPO} || {
        echo "#### RSYNC FAILED, ABORTING TRANSACTION";
        ssh ${REPO_USER}@cvmfs0-psu0.galaxyproject.org cvmfs_server abort -f ${REPO};
        travis_terminate 1;
    }
  # TODO: un-echo next line, comment last line
  - echo ssh ${REPO_USER}@cvmfs0-psu0.galaxyproject.org "cvmfs_server publish -m 'Automated tool install for commit $TRAVIS_COMMIT' ${REPO}"
  - ssh ${REPO_USER}@cvmfs0-psu0.galaxyproject.org "cvmfs_server abort -f ${REPO}"
